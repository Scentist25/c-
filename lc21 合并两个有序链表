/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        if(!l1){
            return l2;
        }
        else if(!l2){
            return l1;
        }
        ListNode* begin= l1->val<l2->val?l1:l2;
        ListNode* p= l1->val<l2->val?l2:l1;
        ListNode* q= begin->next;
        ListNode* k= begin;
        while(p&&q){
            if(p->val<q->val){
                k->next=p;
                p=p->next;
                k=k->next;

            }
            else{
                k->next=q;
                q=q->next;
                k=k->next;
            }
           


        }
         if(q){
                k->next=q;
            }
            else{
                k->next=p;
            }
        return begin;
        
    }
};
